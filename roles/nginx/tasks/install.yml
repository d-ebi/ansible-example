---
- name: Check installed nginx
  ansible.builtin.stat:
    path: "{{ nginx_vars.install_dir }}-{{ nginx_vars.version }}"
  register: nginx_directory

- name: Install nginx tasks
  when: not nginx_directory.stat.exists
  block:
    - name: Download nginx
      ansible.builtin.get_url:
        url: "https://nginx.org/download/nginx-{{ nginx_vars.version }}.tar.gz"
        dest: "{{ temporary_dir }}/nginx-{{ nginx_vars.version }}.tar.gz"
        mode: '0755'

    - name: Unarchive nginx
      ansible.builtin.unarchive:
        remote_src: true
        src: "{{ temporary_dir }}/nginx-{{ nginx_vars.version }}.tar.gz"
        dest: "{{ temporary_dir }}"

    - name: Configure nginx
      ansible.builtin.command:
        chdir: "{{ temporary_dir }}/nginx-{{ nginx_vars.version }}"
        cmd: >-
          ./configure
          --user=nginx
          --group=nginx
          --prefix={{ nginx_vars.install_dir }}-{{ nginx_vars.version }}
          --sbin-path={{ nginx_vars.install_dir }}-{{ nginx_vars.version }}/nginx
          --conf-path={{ nginx_vars.install_dir }}-{{ nginx_vars.version }}/conf/nginx.conf
          --pid-path={{ nginx_vars.pid_path }}
          --http-log-path={{ nginx_vars.log_dir }}/access.log
          --error-log-path={{ nginx_vars.log_dir }}/error.log
          --with-debug
          --with-file-aio
          --with-google_perftools_module
          --with-http_addition_module
          --with-http_auth_request_module
          --with-http_dav_module
          --with-http_degradation_module
          --with-http_flv_module
          --with-http_geoip_module
          --with-http_gunzip_module
          --with-http_gzip_static_module
          --with-http_image_filter_module=dynamic
          --with-http_mp4_module
          --with-http_perl_module=dynamic
          --with-http_random_index_module
          --with-http_realip_module
          --with-http_secure_link_module
          --with-http_slice_module
          --with-http_ssl_module
          --with-http_stub_status_module
          --with-http_sub_module
          --with-http_v2_module
          --with-http_v3_module
          --with-http_xslt_module=dynamic
          --with-mail=dynamic
          --with-mail_ssl_module
          --with-pcre-jit
          --with-poll_module
          --with-select_module
          --with-stream=dynamic
          --with-stream_geoip_module=dynamic
          --with-stream_realip_module
          --with-stream_ssl_module
          --with-stream_ssl_preread_module
          --with-threads
          --with-ld-opt=-Wl,-E
          --with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2
          -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4
          -grecord-gcc-switches -m64 -mtune=generic'
      register: configure_nginx
      changed_when: configure_nginx.rc != 0

    - name: Make nginx
      ansible.builtin.command:
        chdir: "{{ temporary_dir }}/nginx-{{ nginx_vars.version }}"
        cmd: make
      register: make_nginx
      changed_when: make_nginx.rc != 0

    - name: Make install nginx
      ansible.builtin.command:
        chdir: "{{ temporary_dir }}/nginx-{{ nginx_vars.version }}"
        cmd: make install
      register: make_install_nginx
      changed_when: make_install_nginx.rc != 0

    - name: Create conf.d
      ansible.builtin.file:
        path: "{{ nginx_vars.install_dir }}-{{ nginx_vars.version }}/conf.d"
        mode: '0755'
        state: directory

    - name: Create default.d
      ansible.builtin.file:
        path: "{{ nginx_vars.install_dir }}-{{ nginx_vars.version }}/default.d"
        mode: '0755'
        state: directory

    - name: Create maintenance.d
      ansible.builtin.file:
        path: "{{ nginx_vars.install_dir }}-{{ nginx_vars.version }}/maintenance.d"
        mode: '0755'
        state: directory

- name: Check symlink
  ansible.builtin.stat:
    path: "{{ nginx_vars.install_dir }}"
  register: nginx_symlink

- name: Remove symlink
  ansible.builtin.file:
    path: "{{ nginx_vars.install_dir }}"
    state: absent
  when: nginx_symlink.stat.exists and nginx_symlink.stat.islnk

- name: Create symlink
  ansible.builtin.file:
    src: "{{ nginx_vars.install_dir }}-{{ nginx_vars.version }}"
    dest: "{{ nginx_vars.install_dir }}"
    state: link

- name: Deploy nginx.service
  ansible.builtin.template:
    src: nginx.service.j2
    dest: /usr/lib/systemd/system/nginx.service
    mode: '0644'

- name: Reload systemd daemon
  ansible.builtin.systemd_service:
    daemon_reload: true
