# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log {{ nginx_vars.log_dir }}/error.log;
pid {{ nginx_vars.pid_path }};

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include {{ nginx_vars.install_dir }}/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  {{ nginx_vars.log_dir }}/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             {{ nginx_vars.install_dir }}/conf/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.

    geo $access_from {
        include /usr/local/nginx/conf.d/geo.conf;
    }

{% for item in reverse_proxy_settings %}
    #--------------------------------------------------------------------------
    # upstream for {{ item.name }}
    #--------------------------------------------------------------------------
    upstream {{ item.name }} {
        server {{ item.ip_address }}:{{ item.port }};
    }

{% endfor %}

    server {
        listen       80      default_server;
        listen       [::]:80 default_server;
        server_name  _;
        root         {{ nginx_vars.install_dir }}/html;

{% for item in reverse_proxy_settings %}
        #----------------------------------------------------------------------
        # maintenance for {{ item.name }}
        #----------------------------------------------------------------------
        set $maintenance_for_{{ item.name }} false;
        if (-e {{ nginx_vars.install_dir }}/maintenance.d/{{ item.name }}) {
            set $maintenance_for_{{ item.name }} true;
        }
        if ($access_from !~ external) {
            set $maintenance_for_{{ item.name }} false;
        }

{% endfor %}

        # Load configuration files for the default server block.
        # include {{ nginx_vars.install_dir }}/conf/*.conf;

{% for item in reverse_proxy_settings %}
        #----------------------------------------------------------------------
        # location for {{ item.name }}
        #----------------------------------------------------------------------
        location ~ ^/{{ item.name }}$ {
            if ($maintenance_for_{{ item.name }} = true) {
                error_page 503 /maintenance.html;
                return 503;
            }
            rewrite ^/(.*)$ /$1 break;
            proxy_pass http://{{ item.name }};

            add_header Cache-Control no-cache;
            sendfile off;
            etag off;
            if_modified_since off;
        }
        location ~ ^/{{ item.name }}/.*$ {
            if ($maintenance_for_{{ item.name }} = true) {
                error_page 503 /maintenance.html;
                return 503;
            }
            rewrite ^/(.*)$ /$1 break;
            proxy_pass http://{{ item.name }};

            add_header Cache-Control no-cache;
            sendfile off;
            etag off;
            if_modified_since off;
        }

{% endfor %}

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
}